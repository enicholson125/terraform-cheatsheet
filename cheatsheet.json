{
    "title": "Terraform HCL cheatsheet",
    "sections": [
        {
            "title": "Loops",
            "id": "loops",
            "code": "",
            "subsections": [
                {
                    "title": "for_each",
                    "id": "for_each",
                    "code": "",
                    "subsubsections": [
                        {
                            "title": "Creating resources from a list",
                            "id": "for_each_resources_list",
                            "code": "examples/for_each_resources_list.tf"
                        },
                        {
                            "title": "Creating resources from a map",
                            "id": "for_each_resources_map",
                            "code": "examples/for_each_resources_map.tf"
                        },
                        {
                            "title": "Creating sections within a resource",
                            "id": "for_each_inline",
                            "code": "examples/for_each_inline_blocks.tf"
                        }
                    ]
                },
                {
                    "title": "count",
                    "id": "count",
                    "code": "",
                    "subsubsections": [
                        {
                            "title": "Multiple resources from list",
                            "id": "count_list",
                            "code": "examples/count_basic.tf"
                        },
                        {
                            "title": "Flagging resources on and off",
                            "id": "count_ternary",
                            "code": "examples/count_ternary.tf"
                        }
                    ]
                },
                {
                    "title": "for",
                    "id": "for",
                    "code": "",
                    "subsubsections": [
                        {
                            "title": "Iterate over lists",
                            "id": "for_list_iterating",
                            "code": "examples/for_lists.tf"
                        },
                        {
                            "title": "Iterate over maps",
                            "id": "for_map_iterating",
                            "code": "examples/for_maps.tf"
                        },
                        {
                            "title": "For loop in a string (string directive)",
                            "id": "for_string",
                            "code": "examples/for_string_directive.tf"
                        },
                        {
                            "title": "Iterate over property of resource",
                            "id": "for_property_iteration",
                            "code": "examples/for_sub_values.tf"
                        }
                    ]
                },
                {
                    "title": "Wildcard to reference all resources created (splat)",
                    "id": "wildcard",
                    "code": "",
                    "subsubsections": [
                        {
                            "title": "Created using count",
                            "id": "created_using_count",
                            "code": "examples/splat_count.tf"
                        },
                        {
                            "title": "Created using for_each",
                            "id": "created_using_for_each",
                            "code": "examples/splat_for_each.tf"
                        }
                    ]
                }
            ]
        },
        {
            "title": "Ternary",
            "id": "ternary",
            "code": "examples/ternary.tf",
            "subsections": []
        },
        {
            "title": "Path to terraform directory",
            "id": "module_path",
            "code": "examples/path_to_module.tf",
            "subsections": []
        },
        {
            "title": "Variable templating (string interpolation)",
            "id": "var_templating",
            "code": "examples/string_interpolation.tf",
            "subsections": []
        },
        {
            "title": "JSON encoding",
            "id": "json_encode",
            "code": "examples/json_encode.tf",
            "subsections": []
        },
        {
            "title": "Modules",
            "id": "modules",
            "code": "",
            "subsections": [
                {
                    "title": "Creating a module",
                    "id": "create_module",
                    "code": "examples/create_module.tf",
                    "run_code": false,
                    "top_tips": [
                        "Don't define a provider configuration inside a module. Provider configuration can't be deleted until all dependent resources have been deleted, so a module containing its own provider configuration can only be deleted by editing the module to remove the components, then removing the module. Much easier to provide the configuration upstream!",
                        "Variable conditions are particularly useful in modules, to prevent users of the module from making mistakes and providing extra information if they do."
                    ],
                    "subsubsections": []
                },
                {
                    "title": "Referencing a module",
                    "id": "reference_module",
                    "code": "examples/reference_module_basic.tf",
                    "top_tips": [],
                    "subsubsections": [
                        {
                            "title": "Module in Github",
                            "id": "module_with_git",
                            "code": "examples/reference_module_git.tf"
                        },
                        {
                            "title": "Module in Github - specific commit",
                            "id": "module_with_git_commit",
                            "code": "examples/reference_module_git_commit.tf"
                        }
                    ]
                },
                {
                    "title": "Getting module outputs",
                    "id": "module_outputs",
                    "code": "examples/module_outputs.tf",
                    "top_tips": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "Version Constraints",
            "id": "version_constraints",
            "code": "",
            "text": "The version constraint syntax applies to all versions in Terraform configuration including provider, module and Terraform versions.",
            "subsections": [
                {
                    "title": "Version exactly equal to",
                    "id": "version_strict",
                    "code": "examples/version_constraint_strict.tf",
                    "run_code": false,
                    "subsubsections": []
                },
                {
                    "title": "Version approximately equal to",
                    "id": "version_approx",
                    "code": "examples/version_constraint_approx.tf",
                    "run_code": false,
                    "subsubsections": []
                },
                {
                    "title": "Version greater than",
                    "id": "version_greater",
                    "code": "examples/version_constraint_greater_than.tf",
                    "run_code": false,
                    "subsubsections": []
                },
                {
                    "title": "Combining version constraints",
                    "id": "version_combo",
                    "code": "examples/version_constraint_combo.tf",
                    "run_code": false,
                    "subsubsections": []
                }
            ]
        }
    ]
}
